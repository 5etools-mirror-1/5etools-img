name: Build and Upload Release

on:
   push:
      tags:
         - 'v**'

   # Allow running manually from the actions tab
   workflow_dispatch:

env:
   # See: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
   IMAGE_NAME: 5etools-img
   # FIXME(DEPLOY)
   SITE_REPO_NAME: 5etools-mirror-1.github.io-alt

concurrency:
   group: "release"
   cancel-in-progress: true

jobs:
   create-release:
      runs-on: ubuntu-latest
      steps:
         -  uses: actions/checkout@master

         -  name: Archive Images
            run: |
               zip -r -s 500m img-${{ github.ref_name }}.zip img/

         -  name: Upload Release
            # Add the files one-by-one in an effort to avoid timeouts
            # Sleep between creating the release and adding files, as the release takes time to be created (?)
            run: |
               hub release create -m "${{ github.ref_name }}"$'\n\n'"Version ${{ github.ref_name }}" ${{ github.ref_name }}
               sleep 10
               for f in $(find . -name 'img-${{ github.ref_name }}.*' -print); do hub release edit ${{ github.ref_name }} -m '' -a $f; done
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

   create-image:
      runs-on: ubuntu-latest
      steps:
         -  uses: actions/checkout@master

         # See: https://stackoverflow.com/a/58178121
         -  name: Set Env
            run: |
               IMAGE_VERSION=${{ github.ref_name }}
               # Strip "v" prefix from tag name
               [[ "${{ github.ref }}" == "refs/tags/"* ]] && IMAGE_VERSION=$(echo $IMAGE_VERSION | sed -e 's/^v//')
               echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

               echo "IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME | tr '[A-Z]' '[a-z]')" >> $GITHUB_ENV

         # region See: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
         -  name: Build Image
            run: |
               docker build -t $IMAGE_NAME .

         -  name: Log In to Registry
            run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

         -  name: Push Image
            run: |
               echo IMAGE_ID=$IMAGE_ID
               echo IMAGE_VERSION=$IMAGE_VERSION
               docker tag $IMAGE_NAME $IMAGE_ID:$IMAGE_VERSION
               # Always tag latest when pushing a tag, as we don't expect to ever merge old tags
               [[ "${{ github.ref }}" == "refs/tags/"* ]] && docker tag $IMAGE_NAME $IMAGE_ID:latest
               docker push $IMAGE_ID:$IMAGE_VERSION
               docker push $IMAGE_ID:latest
         # endregion

   # See: https://github.com/orgs/community/discussions/26323
   trigger-site-build:
      runs-on: ubuntu-latest
      needs: create-image
      steps:
         -  uses: actions/github-script@v6
            with:
               github-token: ${{ secrets.GHA_WORKFLOW_TRIGGER }}
               script: |
                  // FIXME(DEPLOY)
                  console.log(process.env.SITE_REPO_NAME)
                  console.log(context.ref)

                  await github.rest.actions.createWorkflowDispatch({
                     owner: "5etools-mirror-1",
                     repo: process.env.SITE_REPO_NAME,
                     workflow_id: "master.yml",
                     ref: context.ref
                  })
                  await github.rest.actions.createWorkflowDispatch({
                     owner: "5etools-mirror-1",
                     repo: process.env.SITE_REPO_NAME,
                     workflow_id: "pages.yml",
                     ref: context.ref
                  })
